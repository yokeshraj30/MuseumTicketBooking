const ticketPrice = 20.0;
let selectedSlot = null;
let selectedTicketCount = 0;
let language = 'en';

const slots = {
    "09:00": 50,
    "09:30": 50,
    "10:00": 50,
    "10:30": 50,
    "11:00": 50,
    "11:30": 50,
    "12:00": 50,
    "12:30": 50,
    "13:00": 50,
    "13:30": 50,
    "14:00": 50,
    "14:30": 50,
    "15:00": 50,
    "15:30": 50,
    "16:00": 50,
    "16:30": 50,
    "17:00": 50,
    "17:30": 50
};

const busRoutes = {
    "Route 1": "City Center - Museum - Downtown ЁЯПЩя╕П",
    "Route 2": "Main Station - Museum - Central Park ЁЯМ│",
    "Route 3": "Airport - Museum - Old Town тЬИя╕П",
    "Route 4": "Suburbia - Museum - Shopping Mall ЁЯЫНя╕П"
};

const busRoutesHi = {
    "рд░реВрдЯ 1": "рд╕рд┐рдЯреА рд╕реЗрдВрдЯрд░ - рдореНрдпреВрдЬрд╝рд┐рдпрдо - рдбрд╛рдЙрдирдЯрд╛рдЙрди ЁЯПЩя╕П",
    "рд░реВрдЯ 2": "рдореБрдЦреНрдп рд╕реНрдЯреЗрд╢рди - рдореНрдпреВрдЬрд╝рд┐рдпрдо - рд╕реЗрдВрдЯреНрд░рд▓ рдкрд╛рд░реНрдХ ЁЯМ│",
    "рд░реВрдЯ 3": "рдПрдпрд░рдкреЛрд░реНрдЯ - рдореНрдпреВрдЬрд╝рд┐рдпрдо - рдУрд▓реНрдб рдЯрд╛рдЙрди тЬИя╕П",
    "рд░реВрдЯ 4": "рд╕рдмрд░реНрдмрд┐рдпрд╛ - рдореНрдпреВрдЬрд╝рд┐рдпрдо - рд╢реЙрдкрд┐рдВрдЧ рдореЙрд▓ ЁЯЫНя╕П"
};

const messages = {
    en: {
        start: "Welcome to the Museum Ticket Booking System! ЁЯОЯя╕П",
        showSlots: "Available slots: тП░",
        selectSlot: "You selected slot",
        selectTickets: "Select number of tickets ЁЯОл:",
        bookingConfirmed: "Booking confirmed тЬЕ. A QR code for your entry ticket is generated above.",
        notEnoughTickets: "Not enough tickets available тЭЧ",
        showBusRoutes: "Available bus routes ЁЯЪМ:",
        paymentPrompt: "Total amount to be paid ЁЯТ░: тВ╣",
        ticketBooked: " tickets booked for slot ",
        understood: "Sorry, I didn't understand that ЁЯдФ.",
        greeting: "Hello! I'm your museum ticket booking assistant.тЬи",
        paymentConfirmation: "Confirm payment of тВ╣",
        paymentSuccess: "Payment successful! ЁЯОЙ Booking complete.",
        paymentCancelled: "Payment cancelled. тЭМ",
        remainingTickets: "Remaining tickets for slot ",
    },
    hi: {
        start: "рдореНрдпреВрдЬрд╝рд┐рдпрдо рдЯрд┐рдХрдЯ рдмреБрдХрд┐рдВрдЧ рд╕рд┐рд╕реНрдЯрдо рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯОЯя╕П",
        showSlots: "рдЙрдкрд▓рдмреНрдз рд╕реНрд▓реЙрдЯреНрд╕: тП░",
        selectSlot: "рдЖрдкрдиреЗ рдЪрдпрди рдХрд┐рдпрд╛ рд╣реИ рд╕реНрд▓реЙрдЯ",
        selectTickets: "рдЯрд┐рдХрдЯреЛрдВ рдХреА рд╕рдВрдЦреНрдпрд╛ рдЪреБрдиреЗрдВ ЁЯОл:",
        bookingConfirmed: "рдмреБрдХрд┐рдВрдЧ рдХреА рдкреБрд╖реНрдЯрд┐ рд╣реЛ рдЧрдИ рд╣реИ тЬЕред рдЖрдкрдХреЗ рдкреНрд░рд╡реЗрд╢ рдЯрд┐рдХрдЯ рдХреЗ рд▓рд┐рдП рдПрдХ QR рдХреЛрдб рдКрдкрд░ рдЬрдирд░реЗрдЯ рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред",
        notEnoughTickets: "рдкрд░реНрдпрд╛рдкреНрдд рдЯрд┐рдХрдЯреЗрдВ рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИрдВ тЭЧ",
        showBusRoutes: "рдЙрдкрд▓рдмреНрдз рдмрд╕ рд░реВрдЯреНрд╕ ЁЯЪМ:",
        paymentPrompt: "рдХреБрд▓ рднреБрдЧрддрд╛рди рд░рд╛рд╢рд┐ ЁЯТ░: тВ╣",
        ticketBooked: " рдЯрд┐рдХрдЯреЗрдВ рдмреБрдХ рдХреА рдЧрдИрдВ рд╕реНрд▓реЙрдЯ ",
        understood: "рдореБрдЭреЗ рд╕рдордЭ рдореЗрдВ рдирд╣реАрдВ рдЖрдпрд╛ ЁЯдФред",
        greeting: "рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХрд╛ рдореНрдпреВрдЬрд╝рд┐рдпрдо рдЯрд┐рдХрдЯ рдмреБрдХрд┐рдВрдЧ рд╕рд╣рд╛рдпрдХ рд╣реВрдБ| тЬи",
        paymentConfirmation: "тВ╣ рдХреА рднреБрдЧрддрд╛рди рдХреА рдкреБрд╖реНрдЯрд┐ рдХрд░реЗрдВ",
        paymentSuccess: "рднреБрдЧрддрд╛рди рд╕рдлрд▓! ЁЯОЙ рдмреБрдХрд┐рдВрдЧ рдкреВрд░реА рд╣реБрдИред",
        paymentCancelled: "рднреБрдЧрддрд╛рди рд░рджреНрдж рдХрд┐рдпрд╛ рдЧрдпрд╛ред тЭМ",
        remainingTickets: "рд╕реНрд▓реЙрдЯ рдХреЗ рд▓рд┐рдП рд╢реЗрд╖ рдЯрд┐рдХрдЯреЗрдВ ",
    }
};

function changeLanguage() {
    const langSelect = document.getElementById('language');
    language = langSelect.value;
    startChat();
}

function startChat() {
    displayMessage(messages[language].greeting, 'bot');
    document.getElementById('start-button').style.display = 'none';
    document.getElementById('option-buttons').style.display = 'block';

    document.getElementById('show-slots').textContent = language === 'en' ? "Show Slots тП░" : "рд╕реНрд▓реЙрдЯреНрд╕ рджрд┐рдЦрд╛рдПрдВ тП░";
    document.getElementById('show-bus-routes').textContent = language === 'en' ? "Show Bus Routes ЁЯЪМ" : "рдмрд╕ рд░реВрдЯреНрд╕ рджрд┐рдЦрд╛рдПрдВ ЁЯЪМ";
}

function displayMessage(message, sender) {
    const messageElement = document.createElement('div');
    messageElement.classList.add('message', `${sender}-message`);
    messageElement.innerHTML = `<div class="message-content">${message}</div>`;
    document.getElementById('chat-box').appendChild(messageElement);
    document.getElementById('chat-box').scrollTop = document.getElementById('chat-box').scrollHeight;
}

function showSlots() {
    displayMessage(messages[language].showSlots, 'bot');
    const slotButtonsContainer = document.getElementById('slot-buttons');
    slotButtonsContainer.innerHTML = ''; 
    slotButtonsContainer.style.display = 'block'; 

    for (let time in slots) {
        if (slots[time] > 0) {
            const slotButton = document.createElement('button');
            slotButton.textContent = `${time} (${slots[time]} tickets)`;
            slotButton.onclick = function() {
                selectSlot(time);
            };
            slotButtonsContainer.appendChild(slotButton);
        }
    }
}

function selectSlot(time) {
    selectedSlot = time;
    displayMessage(`${messages[language].selectSlot}: ${time}`, 'bot');
    document.getElementById('slot-buttons').style.display = 'none';
    showTicketOptions();
}

function showTicketOptions() {
    const ticketButtonsContainer = document.getElementById('ticket-buttons');
    ticketButtonsContainer.innerHTML = ''; 
    ticketButtonsContainer.style.display = 'block';

    for (let i = 1; i <= 10; i++) {
        const ticketButton = document.createElement('button');
        ticketButton.textContent = `${i} ЁЯОЯя╕П`;
        ticketButton.onclick = function() {
            selectedTicketCount = i;
            confirmPayment(i);
        };
        ticketButtonsContainer.appendChild(ticketButton);
    }
}

function showBusRoutes() {
    const routes = language === 'hi' ? busRoutesHi : busRoutes;
    let routesMessage = `${messages[language].showBusRoutes}<ul>`;
    for (let route in routes) {
        routesMessage += `<li>${route}: ${routes[route]}</li>`;
    }
    routesMessage += '</ul>';
    displayMessage(routesMessage, 'bot');
}

function confirmPayment(ticketCount) {
    const totalAmount = ticketCount * ticketPrice;
    displayMessage(`${messages[language].paymentConfirmation} тВ╣${totalAmount}?`, 'bot');

    const paymentButtonsContainer = document.getElementById('payment-buttons');
    paymentButtonsContainer.innerHTML = `
        <button onclick="processPayment()">${language === 'en' ? "Confirm Payment ЁЯТ│" : "рднреБрдЧрддрд╛рди рдХреА рдкреБрд╖реНрдЯрд┐ рдХрд░реЗрдВ ЁЯТ│"}</button>
        <button onclick="cancelPayment()">Cancel тЭМ</button>
    `;
    paymentButtonsContainer.style.display = 'block';
}

function processPayment() {
    if (selectedSlot && selectedTicketCount <= slots[selectedSlot]) {
        slots[selectedSlot] -= selectedTicketCount;
        displayMessage(`${selectedTicketCount} ${messages[language].ticketBooked} ${selectedSlot}. ${messages[language].remainingTickets}${slots[selectedSlot]}`, 'bot');
        generateQRCode();
        displayMessage(messages[language].paymentSuccess, 'bot');
    } else {
        displayMessage(messages[language].notEnoughTickets, 'bot');
    }
    document.getElementById('payment-buttons').style.display = 'none';
}

function cancelPayment() {
    displayMessage(messages[language].paymentCancelled, 'bot');
    document.getElementById('payment-buttons').style.display = 'none';
}

function generateQRCode() {
    const qrCodeContainer = document.createElement('div');
    qrCodeContainer.classList.add('qr-code');
    document.getElementById('chat-box').appendChild(qrCodeContainer);

    const qr = new QRCode(qrCodeContainer, {
        text: `Museum Ticket\nSlot: ${selectedSlot}\nTickets: ${selectedTicketCount}`,
        width: 128,
        height: 128
    });
}
